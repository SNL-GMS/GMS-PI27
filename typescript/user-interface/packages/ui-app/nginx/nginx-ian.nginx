# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

# user nginx; # not needed if we're not running as root
worker_processes ${NGINX_WORKER_PROCESSES};
error_log stderr;

# Moved this from /var/run/nginx.pid since we're not root
pid /tmp/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections  8192;
}

http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    log_format  main    '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" "$http_sid" "$http_x_forwarded_for" '
                        'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time" '
                        'proxy_host=$proxy_host  upstream_addr=$upstream_addr';

    access_log  /var/log/nginx/access_log  main buffer=16k;
    error_log   /var/log/nginx/error_log   warn;
    access_log  /dev/stdout  main buffer=16k;
    error_log   /dev/stderr  warn;

    underscores_in_headers on;
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    open_file_cache max=1024 inactive=10s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    client_body_buffer_size 80k;
    client_header_buffer_size 1k;
    client_max_body_size 500M;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # GZIP configuration for faster load times
    gzip on;
    gzip_types text/plain application/xml application/javascript text/javascript application/json text/xml text/css text/html;
    gzip_proxied    no-cache no-store private expired auth;
    gzip_min_length 50;

    #
    # The default server
    #

    server {
        listen       8080 default_server;
        listen       [::]:8080 default_server;
        add_header   X-Frame-Options "SAMEORIGIN";

        root         /opt/${URL_PATH}/${NODE_ENV};

        proxy_read_timeout 1800s;
        proxy_connect_timeout 1800s;
        proxy_send_timeout 1800s;
        send_timeout 1800s;
        
        # Internal redirect for items without trailing slashes
        location @rewrite {
           return 302 $scheme://$http_host$uri/;
        }

        location /${URL_PATH} {
            # Permanent redirect of `/${URL_PATH}` (with no trailing
            # slash) to `/${URL_PATH}/` (with trailing slash).
            port_in_redirect off;
            rewrite ^(/${URL_PATH})$ $1/ permanent;

            # Internal redirect to remove the `/${URL_PATH}` bit.
            rewrite ^/${URL_PATH}/(.*)$ /$1;
        }

        location /resources/sounds {
            mp4;
            mp4_buffer_size      1m;
            mp4_max_buffer_size  5m;

            expires 1y;
            add_header Cache-Control "public";
        }

        location ~* \.(?:css|js|png|gif|jpg|jpeg|svg|woff|woff2|eot|ttf|xml)$ {
            expires 1y;
            add_header Cache-Control "no-cache";
            # Internal redirect to remove the `URL_PATH` bit.
            rewrite ^/${URL_PATH}/(.*)$ /$1;
        }

        location ~* \.(?:html)$ {
          expires 0;
          add_header Cache-Control "no-store";
          # Internal redirect to remove the `URL_PATH` bit.
          rewrite ^/${URL_PATH}/(.*)$ /$1;
        }
    }
}
